#include<bits/stdc++.h>
using namespace std;
#define         int                 long long
#define         pb                  push_back
#define         all(x)              (x).begin(),(x).end()
#define         sz(x)               (int)((x).size())
#define         FOR(i,a,b)          for(int i=a;i<b;i++)
#define         vi                  vector<int>
#define         mod                 1000000007
#define         endl                "\n"
#define         N                   101
int A[N][N];
int I[N][N];
void mult(int I[][N],int A[][N],int dim)
{
    int res[dim+1][dim+1];
    for(int i=1;i<=dim;i++){
        for(int j=1;j<=dim;j++){
            res[i][j]=0;
            for(int k=1;k<=dim;k++){
                res[i][j]+= I[i][k]*A[k][j];
            }
        }
    }
    for(int i=1;i<=dim;i++){
        for(int j=1;j<=dim;j++){
            I[i][j]=res[i][j];
        }
    }
}
void power(int A[][N],int dim, int n)
{
    for(int i=1;i<=dim;i++){
        for(int j=1;j<=dim;j++){
            if(i==j){I[i][j]=1;}
            else{I[i][j]=0;}
        }
    }
    while(n>0){
        if(n%2==0){
            mult(A,A,dim);
            n=n/2;
        }
        else{
            mult(I,A,dim);
            n--;
        }
    }
}
void solve()
{
    int dim,n;
    cin>>dim>>n;
    for(int i=1;i<=dim;i++){
        for(int j=1;j<=dim;j++){
            cin>>A[i][j];
        }
    }
    power(A,dim,n);
    for(int i=1;i<=dim;i++){
        for(int j=1;j<=dim;j++){
            cout<<I[i][j]<<" ";
        }
        cout<<endl;
    }
}
signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);cout.tie(0);
    int T=1;
    //cin>>T;
    while(T--){solve();}
    return 0;
}
